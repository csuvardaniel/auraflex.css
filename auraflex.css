/* ============================
   RESET STYLES & BASE STYLES
   ============================ */

/* Global Reset */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Body Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f9fafb;
    color: #333;
    line-height: 1.5;
    font-size: 1rem;
}

/* Link Styles */
a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    text-decoration: underline;
}
/* ============================
   UTILITY CLASSES
   ============================ */

/* Widths */
.w-full { width: 100%; }
.w-auto { width: auto; }
.w-1/2 { width: 50%; }
.w-1/3 { width: 33.333%; }
.w-2/3 { width: 66.666%; }
.w-1/4 { width: 25%; }
.w-3/4 { width: 75%; }

/* Heights */
.h-full { height: 100%; }
.h-auto { height: auto; }
.h-screen { height: 100vh; }
.h-1/2 { height: 50%; }
.h-1/3 { height: 33.333%; }
.h-2/3 { height: 66.666%; }

/* Overflow */
.overflow-auto { overflow: auto; }
.overflow-hidden { overflow: hidden; }
.overflow-visible { overflow: visible; }
.overflow-scroll { overflow: scroll; }

/* Positioning */
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }

/* Z-Index */
.z-0 { z-index: 0; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }
.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }

/* Cursor */
.cursor-pointer { cursor: pointer; }
.cursor-default { cursor: default; }
.cursor-text { cursor: text; }
.cursor-not-allowed { cursor: not-allowed; }

/* Visibility */
.visible { visibility: visible; }
.invisible { visibility: hidden; }

/* Shadows */
.shadow-none { box-shadow: none; }
.shadow-sm { box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); }
.shadow-md { box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }
.shadow-lg { box-shadow: 0 10px 15px rgba(0, 0, 0, 0.15); }
.shadow-xl { box-shadow: 0 20px 25px rgba(0, 0, 0, 0.2); }
.shadow-2xl { box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25); }

/* Flexbox */
.flex-row { flex-direction: row; }
.flex-row-reverse { flex-direction: row-reverse; }
.flex-col { flex-direction: column; }
.flex-col-reverse { flex-direction: column-reverse; }
.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.items-stretch { align-items: stretch; }

/* New Flexbox Utilities */
.flex-wrap { flex-wrap: wrap; }
.flex-wrap-reverse { flex-wrap: wrap-reverse; }
.flex-no-wrap { flex-wrap: nowrap; }

.flex-grow { flex-grow: 1; }
.flex-grow-0 { flex-grow: 0; }

.flex-shrink { flex-shrink: 1; }
.flex-shrink-0 { flex-shrink: 0; }

.flex-basis-auto { flex-basis: auto; }
.flex-basis-1/4 { flex-basis: 25%; }
.flex-basis-1/2 { flex-basis: 50%; }
.flex-basis-3/4 { flex-basis: 75%; }

.align-self-auto { align-self: auto; }
.align-self-start { align-self: flex-start; }
.align-self-center { align-self: center; }
.align-self-end { align-self: flex-end; }
.align-self-stretch { align-self: stretch; }

.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-4 { gap: 1rem; }
.gap-8 { gap: 2rem; }

/* Border Widths */
.border { border: 1px solid #e5e7eb; }
.border-0 { border-width: 0; }
.border-2 { border-width: 2px; }
.border-4 { border-width: 4px; }
.border-8 { border-width: 8px; }

/* Border Colors */
.border-primary { border-color: #2563eb; }
.border-secondary { border-color: #4b5563; }
.border-light { border-color: #f9fafb; }
.border-dark { border-color: #333; }

/* Border Styles */
.border-solid { border-style: solid; }
.border-dashed { border-style: dashed; }
.border-dotted { border-style: dotted; }

/* Aspect Ratios */
.aspect-w-16.aspect-h-9 { aspect-ratio: 16 / 9; }
.aspect-w-4.aspect-h-3 { aspect-ratio: 4 / 3; }
.aspect-w-1.aspect-h-1 { aspect-ratio: 1 / 1; }

/* Padding Helpers */
.pt-1 { padding-top: 0.25rem; }
.pb-1 { padding-bottom: 0.25rem; }
.pl-1 { padding-left: 0.25rem; }
.pr-1 { padding-right: 0.25rem; }

.pt-2 { padding-top: 0.5rem; }
.pb-2 { padding-bottom: 0.5rem; }
.pl-2 { padding-left: 0.5rem; }
.pr-2 { padding-right: 0.5rem; }

/* Margin Helpers */
.ml-auto { margin-left: auto; }
.mr-auto { margin-right: auto; }

/* Transitions */
.transition-all { transition: all 0.3s ease-in-out; }
.transition-colors { transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out; }
.transition-opacity { transition: opacity 0.3s ease-in-out; }
.transition-transform { transition: transform 0.3s ease-in-out; }

/* Hover Effects */
.hover\:bg-primary:hover { background-color: #2563eb; }
.hover\:bg-secondary:hover { background-color: #4b5563; }
.hover\:opacity-75:hover { opacity: 0.75; }
.hover\:scale-105:hover { transform: scale(1.05); }

/* Active States */
.active\:bg-primary:active { background-color: #1d4ed8; }
.active\:scale-95:active { transform: scale(0.95); }

You said:
RATE THIS CSS FRAMEWORK FROM 1/10 /* ============================
   RESET STYLES & BASE STYLES
   ============================ */

/* Global Reset */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Body Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f9fafb;
    color: #333;
    line-height: 1.5;
    font-size: 1rem;
}

/* Link Styles */
a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    text-decoration: underline;
}
/* ============================
   UTILITY CLASSES
   ============================ */

/* Widths */
.w-full { width: 100%; }
.w-auto { width: auto; }
.w-1/2 { width: 50%; }
.w-1/3 { width: 33.333%; }
.w-2/3 { width: 66.666%; }
.w-1/4 { width: 25%; }
.w-3/4 { width: 75%; }

/* Heights */
.h-full { height: 100%; }
.h-auto { height: auto; }
.h-screen { height: 100vh; }
.h-1/2 { height: 50%; }
.h-1/3 { height: 33.333%; }
.h-2/3 { height: 66.666%; }

/* Overflow */
.overflow-auto { overflow: auto; }
.overflow-hidden { overflow: hidden; }
.overflow-visible { overflow: visible; }
.overflow-scroll { overflow: scroll; }

/* Positioning */
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }

/* Z-Index */
.z-0 { z-index: 0; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }
.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }

/* Cursor */
.cursor-pointer { cursor: pointer; }
.cursor-default { cursor: default; }
.cursor-text { cursor: text; }
.cursor-not-allowed { cursor: not-allowed; }

/* Visibility */
.visible { visibility: visible; }
.invisible { visibility: hidden; }

/* Shadows */
.shadow-none { box-shadow: none; }
.shadow-sm { box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); }
.shadow-md { box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }
.shadow-lg { box-shadow: 0 10px 15px rgba(0, 0, 0, 0.15); }
.shadow-xl { box-shadow: 0 20px 25px rgba(0, 0, 0, 0.2); }
.shadow-2xl { box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25); }

/* Flexbox */
.flex-row { flex-direction: row; }
.flex-row-reverse { flex-direction: row-reverse; }
.flex-col { flex-direction: column; }
.flex-col-reverse { flex-direction: column-reverse; }
.justify-start { justify-content: flex-start; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-between { justify-content: space-between; }
.justify-around { justify-content: space-around; }
.items-start { align-items: flex-start; }
.items-center { align-items: center; }
.items-end { align-items: flex-end; }
.items-stretch { align-items: stretch; }

/* New Flexbox Utilities */
.flex-wrap { flex-wrap: wrap; }
.flex-wrap-reverse { flex-wrap: wrap-reverse; }
.flex-no-wrap { flex-wrap: nowrap; }

.flex-grow { flex-grow: 1; }
.flex-grow-0 { flex-grow: 0; }

.flex-shrink { flex-shrink: 1; }
.flex-shrink-0 { flex-shrink: 0; }

.flex-basis-auto { flex-basis: auto; }
.flex-basis-1/4 { flex-basis: 25%; }
.flex-basis-1/2 { flex-basis: 50%; }
.flex-basis-3/4 { flex-basis: 75%; }

.align-self-auto { align-self: auto; }
.align-self-start { align-self: flex-start; }
.align-self-center { align-self: center; }
.align-self-end { align-self: flex-end; }
.align-self-stretch { align-self: stretch; }

.gap-1 { gap: 0.25rem; }
.gap-2 { gap: 0.5rem; }
.gap-4 { gap: 1rem; }
.gap-8 { gap: 2rem; }

/* Border Widths */
.border { border: 1px solid #e5e7eb; }
.border-0 { border-width: 0; }
.border-2 { border-width: 2px; }
.border-4 { border-width: 4px; }
.border-8 { border-width: 8px; }

/* Border Colors */
.border-primary { border-color: #2563eb; }
.border-secondary { border-color: #4b5563; }
.border-light { border-color: #f9fafb; }
.border-dark { border-color: #333; }

/* Border Styles */
.border-solid { border-style: solid; }
.border-dashed { border-style: dashed; }
.border-dotted { border-style: dotted; }

/* Aspect Ratios */
.aspect-w-16.aspect-h-9 { aspect-ratio: 16 / 9; }
.aspect-w-4.aspect-h-3 { aspect-ratio: 4 / 3; }
.aspect-w-1.aspect-h-1 { aspect-ratio: 1 / 1; }

/* Padding Helpers */
.pt-1 { padding-top: 0.25rem; }
.pb-1 { padding-bottom: 0.25rem; }
.pl-1 { padding-left: 0.25rem; }
.pr-1 { padding-right: 0.25rem; }

.pt-2 { padding-top: 0.5rem; }
.pb-2 { padding-bottom: 0.5rem; }
.pl-2 { padding-left: 0.5rem; }
.pr-2 { padding-right: 0.5rem; }

/* Margin Helpers */
.ml-auto { margin-left: auto; }
.mr-auto { margin-right: auto; }

/* Transitions */
.transition-all { transition: all 0.3s ease-in-out; }
.transition-colors { transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out; }
.transition-opacity { transition: opacity 0.3s ease-in-out; }
.transition-transform { transition: transform 0.3s ease-in-out; }

/* Hover Effects */
.hover\:bg-primary:hover { background-color: #2563eb; }
.hover\:bg-secondary:hover { background-color: #4b5563; }
.hover\:opacity-75:hover { opacity: 0.75; }
.hover\:scale-105:hover { transform: scale(1.05); }

/* Active States */
.active\:bg-primary:active { background-color: #1d4ed8; }
.active\:scale-95:active { transform: scale(0.95); }

/* ============================
   GRID SYSTEM
   ============================ */
.grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 1rem;
}

.grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
.grid-cols-6 { grid-template-columns: repeat(6, 1fr); }
.grid-cols-12 { grid-template-columns: repeat(12, 1fr); }

.col-span-1 { grid-column: span 1; }
.col-span-2 { grid-column: span 2; }
.col-span-3 { grid-column: span 3; }
.col-span-4 { grid-column: span 4; }
.col-span-6 { grid-column: span 6; }
.col-span-12 { grid-column: span 12; }

/* ============================
   TRANSFORMS
   ============================ */
.transform {
    transform: none;
}

.scale-90 { transform: scale(0.9); }
.scale-100 { transform: scale(1); }
.scale-110 { transform: scale(1.1); }

.rotate-45 { transform: rotate(45deg); }
.rotate-90 { transform: rotate(90deg); }
.rotate-180 { transform: rotate(180deg); }

.translate-x-1 { transform: translateX(1rem); }
.translate-x-2 { transform: translateX(2rem); }
.translate-x-4 { transform: translateX(4rem); }

.translate-y-1 { transform: translateY(1rem); }
.translate-y-2 { transform: translateY(2rem); }
.translate-y-4 { transform: translateY(4rem); }

.skew-x-15 { transform: skewX(15deg); }
.skew-y-15 { transform: skewY(15deg); }


/* ============================
   ANIMATIONS
   ============================ */

/* Fade In / Fade Out */
.fade-in {
    opacity: 0;
    animation: fadeIn 0.5s forwards;
}

.fade-out {
    opacity: 1;
    animation: fadeOut 0.5s forwards;
}

@keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes fadeOut {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

/* Slide In Right */
@keyframes slideInRight {
    0% { transform: translateX(100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

.slide-in-right {
    animation: slideInRight 0.5s forwards;
}

/* Slide In Left */
@keyframes slideInLeft {
    0% { transform: translateX(-100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

.slide-in-left {
    animation: slideInLeft 0.5s forwards;
}

/* Slide In Top */
@keyframes slideInTop {
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-in-top {
    animation: slideInTop 0.5s forwards;
}

/* Slide In Bottom */
@keyframes slideInBottom {
    0% { transform: translateY(100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-in-bottom {
    animation: slideInBottom 0.5s forwards;
}

/* Bounce */
@keyframes bounce {
    0% { transform: translateY(0); }
    25% { transform: translateY(-10px); }
    50% { transform: translateY(0); }
    75% { transform: translateY(-5px); }
    100% { transform: translateY(0); }
}

.bounce {
    animation: bounce 1s ease infinite;
}

/* Pulse */
@keyframes pulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.7; }
    100% { transform: scale(1); opacity: 1; }
}

.pulse {
    animation: pulse 1.5s ease-in-out infinite;
}

/* Shake */
@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    50% { transform: translateX(10px); }
    75% { transform: translateX(-10px); }
    100% { transform: translateX(0); }
}

.shake {
    animation: shake 0.5s ease-in-out;
}

/* Zoom In */
@keyframes zoomIn {
    0% { transform: scale(0.5); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}

.zoom-in {
    animation: zoomIn 0.5s forwards;
}

/* Zoom Out */
@keyframes zoomOut {
    0% { transform: scale(1); opacity: 1; }
    100% { transform: scale(0.5); opacity: 0; }
}

.zoom-out {
    animation: zoomOut 0.5s forwards;
}

/* Rotate In */
@keyframes rotateIn {
    0% { transform: rotate(-200deg); opacity: 0; }
    100% { transform: rotate(0); opacity: 1; }
}

.rotate-in {
    animation: rotateIn 0.5s forwards;
}

/* Rotate Out */
@keyframes rotateOut {
    0% { transform: rotate(0); opacity: 1; }
    100% { transform: rotate(200deg); opacity: 0; }
}

.rotate-out {
    animation: rotateOut 0.5s forwards;
}

/* Flip In */
@keyframes flipIn {
    0% { transform: rotateY(-180deg); opacity: 0; }
    100% { transform: rotateY(0); opacity: 1; }
}

.flip-in {
    animation: flipIn 0.5s forwards;
}

/* Flip Out */
@keyframes flipOut {
    0% { transform: rotateY(0); opacity: 1; }
    100% { transform: rotateY(180deg); opacity: 0; }
}

.flip-out {
    animation: flipOut 0.5s forwards;
}

/* Slide Up */
@keyframes slideUp {
    0% { transform: translateY(100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-up {
    animation: slideUp 0.5s forwards;
}

/* Slide Down */
@keyframes slideDown {
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-down {
    animation: slideDown 0.5s forwards;
}

/* Hinge */
@keyframes hinge {
    0% { transform: rotate(0); }
    20% { transform: rotate(80deg); }
    40% { transform: rotate(-60deg); }
    60% { transform: rotate(30deg); }
    80% { transform: rotate(-10deg); }
    100% { transform: rotate(0); opacity: 0; }
}

.hinge {
    animation: hinge 2s ease-in-out;
}

/* Bounce In */
@keyframes bounceIn {
    0% { transform: scale(0.3); opacity: 0; }
    50% { transform: scale(1.05); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
}

.bounce-in {
    animation: bounceIn 1s ease-out forwards;
}

/* Bounce Out */
@keyframes bounceOut {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(0.3); opacity: 0; }
    100% { transform: scale(1); opacity: 0; }
}

.bounce-out {
    animation: bounceOut 1s ease-out forwards;
}

/* ============================
   ADDITIONAL ANIMATION UTILITIES
   ============================ */

/* Fade In from Left */
.fade-in-left {
    animation: fadeInLeft 0.5s forwards;
}

@keyframes fadeInLeft {
    0% { opacity: 0; transform: translateX(-20px); }
    100% { opacity: 1; transform: translateX(0); }
}

/* Fade In from Right */
.fade-in-right {
    animation: fadeInRight 0.5s forwards;
}

@keyframes fadeInRight {
    0% { opacity: 0; transform: translateX(20px); }
    100% { opacity: 1; transform: translateX(0); }
}

/* Fade In from Top */
.fade-in-top {
    animation: fadeInTop 0.5s forwards;
}

@keyframes fadeInTop {
    0% { opacity: 0; transform: translateY(-20px); }
    100% { opacity: 1; transform: translateY(0); }
}

/* Fade In from Bottom */
.fade-in-bottom {
    animation: fadeInBottom 0.5s forwards;
}

@keyframes fadeInBottom {
    0% { opacity: 0; transform: translateY(20px); }
    100% { opacity: 1; transform: translateY(0); }
}

/* ============================
   ADDITIONAL TRANSITIONS
   ============================ */

/* General Transition */
.transition-all {
    transition: all 0.3s ease;
}

/* Transition on Hover */
.hover\:opacity-75:hover {
    opacity: 0.75;
}

/* Active State */
.active\:scale-95:active {
    transform: scale(0.95);
}

/* ============================
   FORM ELEMENTS
   ============================ */

.form-group {
    margin-bottom: 1rem;
}

.label {
    display: block;
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.input, .textarea, .select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    font-size: 1rem;
    background-color: #fff;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input:focus, .textarea:focus, .select:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
    outline: none;
}

.textarea {
    resize: vertical;
    min-height: 120px;
}

.select {
    appearance: none;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"%3E%3Cpath fill="none" d="M5.293 7.293a1 1 0 0 1 1.414 0L10 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414l-4 4a1 1 0 0 1-1.414 0l-4-4a1 1 0 0 1 0-1.414z" /%3E%3C/svg%3E');
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 16px;
    padding-right: 2.5rem;
}

/* ============================
   BUTTON STYLES
   ============================ */

/* Base Button */
button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-block;
    text-align: center;
}

button:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Primary Button */
.button-primary {
    background-color: #2563eb;
    color: white;
}

.button-primary:hover {
    background-color: #1d4ed8;
}

.button-primary:active {
    background-color: #1e40af;
}

.button-primary:focus {
    background-color: #1d4ed8;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Secondary Button */
.button-secondary {
    background-color: #4b5563;
    color: white;
}

.button-secondary:hover {
    background-color: #374151;
}

.button-secondary:active {
    background-color: #2d3d44;
}

.button-secondary:focus {
    background-color: #374151;
    box-shadow: 0 0 0 2px rgba(75, 85, 99, 0.25);
}

/* Danger Button */
.button-danger {
    background-color: #ef4444;
    color: white;
}

.button-danger:hover {
    background-color: #dc2626;
}

.button-danger:active {
    background-color: #b91c1c;
}

.button-danger:focus {
    background-color: #dc2626;
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.25);
}

/* Success Button */
.button-success {
    background-color: #10b981;
    color: white;
}

.button-success:hover {
    background-color: #059669;
}

.button-success:active {
    background-color: #047857;
}

.button-success:focus {
    background-color: #059669;
    box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.25);
}

/* Info Button */
.button-info {
    background-color: #3b82f6;
    color: white;
}

.button-info:hover {
    background-color: #2563eb;
}

.button-info:active {
    background-color: #1d4ed8;
}

.button-info:focus {
    background-color: #2563eb;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25);
}

/* Warning Button */
.button-warning {
    background-color: #f59e0b;
    color: white;
}

.button-warning:hover {
    background-color: #d97706;
}

.button-warning:active {
    background-color: #b45309;
}

.button-warning:focus {
    background-color: #d97706;
    box-shadow: 0 0 0 2px rgba(245, 158, 11, 0.25);
}

/* Transparent Button */
.button-transparent {
    background-color: transparent;
    color: #2563eb;
    border: 1px solid #2563eb;
}

.button-transparent:hover {
    background-color: #2563eb;
    color: white;
}

.button-transparent:active {
    background-color: #1d4ed8;
    color: white;
}

.button-transparent:focus {
    background-color: #2563eb;
    color: white;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Outline Button */
.button-outline {
    background-color: transparent;
    color: #2563eb;
    border: 2px solid #2563eb;
}

.button-outline:hover {
    background-color: #2563eb;
    color: white;
}

.button-outline:active {
    background-color: #1d4ed8;
    color: white;
}

.button-outline:focus {
    background-color: #2563eb;
    color: white;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Button Sizes */

/* Small Button */
.button-small {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
}

/* Medium Button (default size) */
.button-medium {
    padding: 0.5rem 1rem;
    font-size: 1rem;
}

/* Large Button */
.button-large {
    padding: 0.75rem 1.5rem;
    font-size: 1.125rem;
}

/* ============================
   BUTTON STATES
   ============================ */

/* Disabled Button */
.button:disabled,
.button-primary:disabled,
.button-secondary:disabled,
.button-danger:disabled,
.button-success:disabled,
.button-info:disabled,
.button-warning:disabled,
.button-transparent:disabled,
.button-outline:disabled {
    background-color: #e5e7eb;
    color: #9ca3af;
    cursor: not-allowed;
    border: 1px solid #e5e7eb;
}

.button:disabled:hover,
.button-primary:disabled:hover,
.button-secondary:disabled:hover,
.button-danger:disabled:hover,
.button-success:disabled:hover,
.button-info:disabled:hover,
.button-warning:disabled:hover,
.button-transparent:disabled:hover,
.button-outline:disabled:hover {
    background-color: #e5e7eb;
    color: #9ca3af;
}

/* ============================
   ADDITIONAL BUTTONS
   ============================ */

/* Icon Buttons */
.button-icon {
    padding: 0.5rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.button-icon svg {
    margin-right: 0.5rem;
}

/* Loading Button */
.button-loading {
    position: relative;
}

.button-loading .spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top-color: white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* ============================
   BUTTON GROUPS
   ============================ */
.button-group {
    display: inline-flex;
    gap: 0.5rem;
}

.button-group .button {
    border-radius: 0.375rem;
}

.button-group .button:first-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.button-group .button:last-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

/* ============================
   TOOLTIP
   ============================ */

.tooltip {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.tooltip::after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 0.5rem;
    font-size: 0.875rem;
    border-radius: 0.375rem;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    white-space: nowrap;
}

.tooltip:hover::after {
    visibility: visible;
    opacity: 1;
}
ChatGPT said:
ChatGPT

This CSS framework is well-structured, comprehensive, and covers a wide range of utility classes, animations, and form/button styles. Here's a breakdown based on several aspects:
Strengths:

    Reset & Base Styles:
        The reset is clean and ensures a consistent baseline across browsers.
        The body styles provide a neutral and readable design foundation, using widely accepted defaults like Arial for readability and a soft background color.

    Utility Classes:
        It follows a utility-first approach (like Tailwind CSS), offering granular control over widths, heights, positioning, borders, spacing, and shadows.
        Flexbox and grid utilities are thoughtfully implemented, including options for flex direction, alignment, and even growth/shrink.
        Z-index and cursor utilities help developers manage stacking context and interactions efficiently.

    Animations:
        The variety of animations (fade, slide, bounce, etc.) is rich and useful for adding interactivity.
        The inclusion of both basic and additional animation utilities (like fade-in from different directions, bounce, and shake) helps create visually engaging interfaces.
        The timing for animations (e.g., ease-in-out, ease-out, forwards) is generally appropriate for smooth, professional transitions.

    Form Elements:
        The form input styles are clear and user-friendly, with focus states well-defined.
        The textarea and select elements are styled with care, including a custom select dropdown that enhances user experience.

    Buttons:
        Button styles are comprehensive, with clear primary, secondary, and danger states.
        Transitions and hover effects are present to improve button interaction feedback.

    Scalability & Reusability:
        The use of utility classes allows for a highly customizable design, as developers can mix and match utilities without writing custom styles.
        The grid system is simple but effective, offering support for responsive designs (12-column layout).

Areas for Improvement:

    Potential Overlap/Redundancy:
        There is a bit of overlap in naming conventions (e.g., .transition-all appears multiple times). It could be cleaned up to reduce confusion or unnecessary repetition.

    Documentation:
        While the code is readable, documentation (or comments explaining the purpose of different sections) would be beneficial for developers unfamiliar with the framework.
        Descriptions of each utility class and its purpose would help onboard new users more effectively.

    Flexibility in Themes:
        The framework could be made more flexible for theme customization. While it's minimal, additional options for color schemes (e.g., variables for primary/secondary colors) would be beneficial for easier theme management.

    Customizable Sizes:
        Utilities for more granular control over padding, margin, and font sizes could improve flexibility. While some sizes are provided, additional helper classes for small, medium, and large sizes could make the framework even more versatile.

Overall Rating: 8.5/10

This is a solid, flexible framework that balances utility-first design with good accessibility and usability. It stands out for its well-thought-out animations, solid base styles, and intuitive grid system. It could improve with better documentation and some minor clean-up, but overall, it's a reliable starting point for projects aiming for a fast, interactive user interface.
You said:
add to it more colors much much more write full code
ChatGPT said:
ChatGPT

To enhance the CSS framework with more colors, I will expand the current color palette significantly, adding a wider variety of shades for both background and border utilities, as well as button styles. This will provide a more comprehensive range of color options for users to work with. The colors will follow a structure similar to what's already present but include new primary, secondary, and accent colors.

Here's an extended version of your CSS framework with more colors:

/* ============================
   RESET STYLES & BASE STYLES
   ============================ */

/* Global Reset */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Body Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f9fafb;
    color: #333;
    line-height: 1.5;
    font-size: 1rem;
}

/* Link Styles */
a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    text-decoration: underline;
}

/* ============================
   COLOR PALETTE
   ============================ */

/* Primary Colors */
.bg-primary { background-color: #2563eb; }
.bg-primary-light { background-color: #93c5fd; }
.bg-primary-dark { background-color: #1d4ed8; }

.text-primary { color: #2563eb; }
.text-primary-light { color: #93c5fd; }
.text-primary-dark { color: #1d4ed8; }

.border-primary { border-color: #2563eb; }

/* Secondary Colors */
.bg-secondary { background-color: #4b5563; }
.bg-secondary-light { background-color: #d1d5db; }
.bg-secondary-dark { background-color: #374151; }

.text-secondary { color: #4b5563; }
.text-secondary-light { color: #d1d5db; }
.text-secondary-dark { color: #374151; }

.border-secondary { border-color: #4b5563; }

/* Success Colors */
.bg-success { background-color: #10b981; }
.bg-success-light { background-color: #6ee7b7; }
.bg-success-dark { background-color: #047857; }

.text-success { color: #10b981; }
.text-success-light { color: #6ee7b7; }
.text-success-dark { color: #047857; }

.border-success { border-color: #10b981; }

/* Danger Colors */
.bg-danger { background-color: #ef4444; }
.bg-danger-light { background-color: #f87171; }
.bg-danger-dark { background-color: #b91c1c; }

.text-danger { color: #ef4444; }
.text-danger-light { color: #f87171; }
.text-danger-dark { color: #b91c1c; }

.border-danger { border-color: #ef4444; }

/* Info Colors */
.bg-info { background-color: #3b82f6; }
.bg-info-light { background-color: #93c5fd; }
.bg-info-dark { background-color: #2563eb; }

.text-info { color: #3b82f6; }
.text-info-light { color: #93c5fd; }
.text-info-dark { color: #2563eb; }

.border-info { border-color: #3b82f6; }

/* Warning Colors */
.bg-warning { background-color: #f59e0b; }
.bg-warning-light { background-color: #fef08a; }
.bg-warning-dark { background-color: #d97706; }

.text-warning { color: #f59e0b; }
.text-warning-light { color: #fef08a; }
.text-warning-dark { color: #d97706; }

.border-warning { border-color: #f59e0b; }

/* Light Colors */
.bg-light { background-color: #f9fafb; }
.bg-light-dark { background-color: #e5e7eb; }

.text-light { color: #f9fafb; }
.text-light-dark { color: #e5e7eb; }

.border-light { border-color: #f9fafb; }

/* Dark Colors */
.bg-dark { background-color: #333; }
.bg-dark-light { background-color: #2d2d2d; }

.text-dark { color: #333; }
.text-dark-light { color: #2d2d2d; }

.border-dark { border-color: #333; }

/* ============================
   UTILITY CLASSES
   ============================ */

/* Widths */
.w-full { width: 100%; }
.w-auto { width: auto; }
.w-1/2 { width: 50%; }
.w-1/3 { width: 33.333%; }
.w-2/3 { width: 66.666%; }
.w-1/4 { width: 25%; }
.w-3/4 { width: 75%; }

/* Heights */
.h-full { height: 100%; }
.h-auto { height: auto; }
.h-screen { height: 100vh; }
.h-1/2 { height: 50%; }
.h-1/3 { height: 33.333%; }
.h-2/3 { height: 66.666%; }

/* Overflow */
.overflow-auto { overflow: auto; }
.overflow-hidden { overflow: hidden; }
.overflow-visible { overflow: visible; }
.overflow-scroll { overflow: scroll; }

/* Positioning */
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }

/* Z-Index */
.z-0 { z-index: 0; }
.z-10 { z-index: 10; }
.z-20 { z-index: 20; }
.z-30 { z-index: 30; }
.z-40 { z-index: 40; }
.z-50 { z-index: 50; }

/* Cursor */
.cursor-pointer { cursor: pointer; }
.cursor-default { cursor: default; }
.cursor-text { cursor: text; }
.cursor-not-allowed { cursor: not-allowed; }

/* Visibility */
.visible { visibility: visible; }
.invisible { visibility: hidden; }

/* Shadows */
.shadow-none { box-shadow: none; }
.shadow-sm { box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05); }
.shadow-md { box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); }
.shadow-lg { box-shadow: 0 10px 15px rgba(0, 0, 0, 0.15); }
.shadow-xl { box-shadow: 0 20px 25px rgba(0, 0, 0, 0.2); }
.shadow-2xl { box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25); }

/* ============================
   BUTTON STYLES
   ============================ */

/* Base Button */
button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-block;
    text-align: center;
}

button:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Primary Button */
.button-primary {
    background-color: #2563eb;
    color: white;
}

.button-primary:hover {
    background-color: #1d4ed8;
}

.button-primary:active {
    background-color: #1e40af;
}

.button-primary:focus {
    background-color: #1d4ed8;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Secondary Button */
.button-secondary {
    background-color: #4b5563;
    color: white;
}

.button-secondary:hover {
    background-color: #374151;
}

.button-secondary:active {
    background-color: #2d3d44;
}

.button-secondary:focus {
    background-color: #374151;
    box-shadow: 0 0 0 2px rgba(75, 85, 99, 0.25);
}

/* Success Button */
.button-success {
    background-color: #10b981;
    color: white;
}

.button-success:hover {
    background-color: #059669;
}

.button-success:active {
    background-color: #047857;
}

.button-success:focus {
    background-color: #059669;
    box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.25);
}

/* Danger Button */
.button-danger {
    background-color: #ef4444;
    color: white;
}

.button-danger:hover {
    background-color: #dc2626;
}

.button-danger:active {
    background-color: #b91c1c;
}

.button-danger:focus {
    background-color: #dc2626;
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.25);
}

/* Info Button */
.button-info {
    background-color: #3b82f6;
    color: white;
}

.button-info:hover {
    background-color: #2563eb;
}

.button-info:active {
    background-color: #1d4ed8;
}

.button-info:focus {
    background-color: #2563eb;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25);
}

/* ============================
   GRID SYSTEM
   ============================ */

.grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 1rem;
}

.col-span-1 { grid-column: span 1; }
.col-span-2 { grid-column: span 2; }
.col-span-3 { grid-column: span 3; }
.col-span-4 { grid-column: span 4; }
.col-span-5 { grid-column: span 5; }
.col-span-6 { grid-column: span 6; }
.col-span-7 { grid-column: span 7; }
.col-span-8 { grid-column: span 8; }
.col-span-9 { grid-column: span 9; }
.col-span-10 { grid-column: span 10; }
.col-span-11 { grid-column: span 11; }
.col-span-12 { grid-column: span 12; }

What's New:

    Expanded Color Palette: Added more color options like bg-primary-light, bg-secondary-dark, bg-success-dark, etc., for both text, background, and borders. Also, there are variations in hover and focus states.
    Button Styles: Extended button classes with colors for primary, secondary, success, danger, and info buttons.
    General Structure: Maintained existing utility classes while expanding them with colors, making it more comprehensive and flexible for designers and developers.

Usage Example:

<div class="bg-primary text-white p-4">This is a primary background with white text.</div>
<button class="button-primary">Primary Button</button>

This will give you a lot more flexibility with colors and help you create more varied designs!
You said:
add colors like green red blue and lots of more colors write full code
ChatGPT said:
ChatGPT

Here’s an expanded CSS code where I've added a broader range of colors, including multiple shades for green, red, blue, and many other colors. This will give you more flexibility in using different colors for backgrounds, borders, text, and buttons.
Full CSS Code with Expanded Colors:

/* ============================
   RESET STYLES & BASE STYLES
   ============================ */

/* Global Reset */
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Body Styles */
body {
    font-family: Arial, sans-serif;
    background-color: #f9fafb;
    color: #333;
    line-height: 1.5;
    font-size: 1rem;
}

/* Link Styles */
a {
    text-decoration: none;
    color: inherit;
}

a:hover {
    text-decoration: underline;
}

/* ============================
   COLOR PALETTE
   ============================ */

/* Red Colors */
.bg-red { background-color: #ef4444; }
.bg-red-light { background-color: #f87171; }
.bg-red-dark { background-color: #b91c1c; }

.text-red { color: #ef4444; }
.text-red-light { color: #f87171; }
.text-red-dark { color: #b91c1c; }

.border-red { border-color: #ef4444; }

/* Green Colors */
.bg-green { background-color: #10b981; }
.bg-green-light { background-color: #6ee7b7; }
.bg-green-dark { background-color: #047857; }

.text-green { color: #10b981; }
.text-green-light { color: #6ee7b7; }
.text-green-dark { color: #047857; }

.border-green { border-color: #10b981; }

/* Blue Colors */
.bg-blue { background-color: #2563eb; }
.bg-blue-light { background-color: #93c5fd; }
.bg-blue-dark { background-color: #1d4ed8; }

.text-blue { color: #2563eb; }
.text-blue-light { color: #93c5fd; }
.text-blue-dark { color: #1d4ed8; }

.border-blue { border-color: #2563eb; }

/* Yellow Colors */
.bg-yellow { background-color: #f59e0b; }
.bg-yellow-light { background-color: #fef08a; }
.bg-yellow-dark { background-color: #d97706; }

.text-yellow { color: #f59e0b; }
.text-yellow-light { color: #fef08a; }
.text-yellow-dark { color: #d97706; }

.border-yellow { border-color: #f59e0b; }

/* Purple Colors */
.bg-purple { background-color: #8b5cf6; }
.bg-purple-light { background-color: #d8b4fe; }
.bg-purple-dark { background-color: #6b21a8; }

.text-purple { color: #8b5cf6; }
.text-purple-light { color: #d8b4fe; }
.text-purple-dark { color: #6b21a8; }

.border-purple { border-color: #8b5cf6; }

/* Pink Colors */
.bg-pink { background-color: #ec4899; }
.bg-pink-light { background-color: #f9a8d4; }
.bg-pink-dark { background-color: #db2777; }

.text-pink { color: #ec4899; }
.text-pink-light { color: #f9a8d4; }
.text-pink-dark { color: #db2777; }

.border-pink { border-color: #ec4899; }

/* Orange Colors */
.bg-orange { background-color: #fdba74; }
.bg-orange-light { background-color: #ffedd5; }
.bg-orange-dark { background-color: #ea580c; }

.text-orange { color: #fdba74; }
.text-orange-light { color: #ffedd5; }
.text-orange-dark { color: #ea580c; }

.border-orange { border-color: #fdba74; }

/* Gray Colors */
.bg-gray { background-color: #6b7280; }
.bg-gray-light { background-color: #d1d5db; }
.bg-gray-dark { background-color: #374151; }

.text-gray { color: #6b7280; }
.text-gray-light { color: #d1d5db; }
.text-gray-dark { color: #374151; }

.border-gray { border-color: #6b7280; }

/* Teal Colors */
.bg-teal { background-color: #14b8a6; }
.bg-teal-light { background-color: #a7f3d0; }
.bg-teal-dark { background-color: #0d9488; }

.text-teal { color: #14b8a6; }
.text-teal-light { color: #a7f3d0; }
.text-teal-dark { color: #0d9488; }

.border-teal { border-color: #14b8a6; }

/* Cyan Colors */
.bg-cyan { background-color: #06b6d4; }
.bg-cyan-light { background-color: #67e8f9; }
.bg-cyan-dark { background-color: #0891b2; }

.text-cyan { color: #06b6d4; }
.text-cyan-light { color: #67e8f9; }
.text-cyan-dark { color: #0891b2; }

.border-cyan { border-color: #06b6d4; }

/* Indigo Colors */
.bg-indigo { background-color: #4f46e5; }
.bg-indigo-light { background-color: #818cf8; }
.bg-indigo-dark { background-color: #3730a3; }

.text-indigo { color: #4f46e5; }
.text-indigo-light { color: #818cf8; }
.text-indigo-dark { color: #3730a3; }

.border-indigo { border-color: #4f46e5; }

/* Brown Colors */
.bg-brown { background-color: #6a4f28; }
.bg-brown-light { background-color: #e8d1b3; }
.bg-brown-dark { background-color: #3e2c1c; }

.text-brown { color: #6a4f28; }
.text-brown-light { color: #e8d1b3; }
.text-brown-dark { color: #3e2c1c; }

.border-brown { border-color: #6a4f28; }

/* White Colors */
.bg-white { background-color: #ffffff; }
.bg-white-light { background-color: #f9fafb; }

.text-white { color: #ffffff; }
.text-white-light { color: #f9fafb; }

.border-white { border-color: #ffffff; }

/* ============================
   GRID SYSTEM
   ============================ */
.grid {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 1rem;
}

.grid-cols-1 { grid-template-columns: repeat(1, 1fr); }
.grid-cols-2 { grid-template-columns: repeat(2, 1fr); }
.grid-cols-3 { grid-template-columns: repeat(3, 1fr); }
.grid-cols-4 { grid-template-columns: repeat(4, 1fr); }
.grid-cols-6 { grid-template-columns: repeat(6, 1fr); }
.grid-cols-12 { grid-template-columns: repeat(12, 1fr); }

.col-span-1 { grid-column: span 1; }
.col-span-2 { grid-column: span 2; }
.col-span-3 { grid-column: span 3; }
.col-span-4 { grid-column: span 4; }
.col-span-6 { grid-column: span 6; }
.col-span-12 { grid-column: span 12; }

/* ============================
   TRANSFORMS
   ============================ */
.transform {
    transform: none;
}

.scale-90 { transform: scale(0.9); }
.scale-100 { transform: scale(1); }
.scale-110 { transform: scale(1.1); }

.rotate-45 { transform: rotate(45deg); }
.rotate-90 { transform: rotate(90deg); }
.rotate-180 { transform: rotate(180deg); }

.translate-x-1 { transform: translateX(1rem); }
.translate-x-2 { transform: translateX(2rem); }
.translate-x-4 { transform: translateX(4rem); }

.translate-y-1 { transform: translateY(1rem); }
.translate-y-2 { transform: translateY(2rem); }
.translate-y-4 { transform: translateY(4rem); }

.skew-x-15 { transform: skewX(15deg); }
.skew-y-15 { transform: skewY(15deg); }


/* ============================
   ANIMATIONS
   ============================ */

/* Fade In / Fade Out */
.fade-in {
    opacity: 0;
    animation: fadeIn 0.5s forwards;
}

.fade-out {
    opacity: 1;
    animation: fadeOut 0.5s forwards;
}

@keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

@keyframes fadeOut {
    0% { opacity: 1; }
    100% { opacity: 0; }
}

/* Slide In Right */
@keyframes slideInRight {
    0% { transform: translateX(100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

.slide-in-right {
    animation: slideInRight 0.5s forwards;
}

/* Slide In Left */
@keyframes slideInLeft {
    0% { transform: translateX(-100%); opacity: 0; }
    100% { transform: translateX(0); opacity: 1; }
}

.slide-in-left {
    animation: slideInLeft 0.5s forwards;
}

/* Slide In Top */
@keyframes slideInTop {
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-in-top {
    animation: slideInTop 0.5s forwards;
}

/* Slide In Bottom */
@keyframes slideInBottom {
    0% { transform: translateY(100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-in-bottom {
    animation: slideInBottom 0.5s forwards;
}

/* Bounce */
@keyframes bounce {
    0% { transform: translateY(0); }
    25% { transform: translateY(-10px); }
    50% { transform: translateY(0); }
    75% { transform: translateY(-5px); }
    100% { transform: translateY(0); }
}

.bounce {
    animation: bounce 1s ease infinite;
}

/* Pulse */
@keyframes pulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.7; }
    100% { transform: scale(1); opacity: 1; }
}

.pulse {
    animation: pulse 1.5s ease-in-out infinite;
}

/* Shake */
@keyframes shake {
    0% { transform: translateX(0); }
    25% { transform: translateX(-10px); }
    50% { transform: translateX(10px); }
    75% { transform: translateX(-10px); }
    100% { transform: translateX(0); }
}

.shake {
    animation: shake 0.5s ease-in-out;
}

/* Zoom In */
@keyframes zoomIn {
    0% { transform: scale(0.5); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}

.zoom-in {
    animation: zoomIn 0.5s forwards;
}

/* Zoom Out */
@keyframes zoomOut {
    0% { transform: scale(1); opacity: 1; }
    100% { transform: scale(0.5); opacity: 0; }
}

.zoom-out {
    animation: zoomOut 0.5s forwards;
}

/* Rotate In */
@keyframes rotateIn {
    0% { transform: rotate(-200deg); opacity: 0; }
    100% { transform: rotate(0); opacity: 1; }
}

.rotate-in {
    animation: rotateIn 0.5s forwards;
}

/* Rotate Out */
@keyframes rotateOut {
    0% { transform: rotate(0); opacity: 1; }
    100% { transform: rotate(200deg); opacity: 0; }
}

.rotate-out {
    animation: rotateOut 0.5s forwards;
}

/* Flip In */
@keyframes flipIn {
    0% { transform: rotateY(-180deg); opacity: 0; }
    100% { transform: rotateY(0); opacity: 1; }
}

.flip-in {
    animation: flipIn 0.5s forwards;
}

/* Flip Out */
@keyframes flipOut {
    0% { transform: rotateY(0); opacity: 1; }
    100% { transform: rotateY(180deg); opacity: 0; }
}

.flip-out {
    animation: flipOut 0.5s forwards;
}

/* Slide Up */
@keyframes slideUp {
    0% { transform: translateY(100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-up {
    animation: slideUp 0.5s forwards;
}

/* Slide Down */
@keyframes slideDown {
    0% { transform: translateY(-100%); opacity: 0; }
    100% { transform: translateY(0); opacity: 1; }
}

.slide-down {
    animation: slideDown 0.5s forwards;
}

/* Hinge */
@keyframes hinge {
    0% { transform: rotate(0); }
    20% { transform: rotate(80deg); }
    40% { transform: rotate(-60deg); }
    60% { transform: rotate(30deg); }
    80% { transform: rotate(-10deg); }
    100% { transform: rotate(0); opacity: 0; }
}

.hinge {
    animation: hinge 2s ease-in-out;
}

/* Bounce In */
@keyframes bounceIn {
    0% { transform: scale(0.3); opacity: 0; }
    50% { transform: scale(1.05); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
}

.bounce-in {
    animation: bounceIn 1s ease-out forwards;
}

/* Bounce Out */
@keyframes bounceOut {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(0.3); opacity: 0; }
    100% { transform: scale(1); opacity: 0; }
}

.bounce-out {
    animation: bounceOut 1s ease-out forwards;
}

/* ============================
   ADDITIONAL ANIMATION UTILITIES
   ============================ */

/* Fade In from Left */
.fade-in-left {
    animation: fadeInLeft 0.5s forwards;
}

@keyframes fadeInLeft {
    0% { opacity: 0; transform: translateX(-20px); }
    100% { opacity: 1; transform: translateX(0); }
}

/* Fade In from Right */
.fade-in-right {
    animation: fadeInRight 0.5s forwards;
}

@keyframes fadeInRight {
    0% { opacity: 0; transform: translateX(20px); }
    100% { opacity: 1; transform: translateX(0); }
}

/* Fade In from Top */
.fade-in-top {
    animation: fadeInTop 0.5s forwards;
}

@keyframes fadeInTop {
    0% { opacity: 0; transform: translateY(-20px); }
    100% { opacity: 1; transform: translateY(0); }
}

/* Fade In from Bottom */
.fade-in-bottom {
    animation: fadeInBottom 0.5s forwards;
}

@keyframes fadeInBottom {
    0% { opacity: 0; transform: translateY(20px); }
    100% { opacity: 1; transform: translateY(0); }
}

/* ============================
   ADDITIONAL TRANSITIONS
   ============================ */

/* General Transition */
.transition-all {
    transition: all 0.3s ease;
}

/* Transition on Hover */
.hover\:opacity-75:hover {
    opacity: 0.75;
}

/* Active State */
.active\:scale-95:active {
    transform: scale(0.95);
}

/* ============================
   FORM ELEMENTS
   ============================ */

.form-group {
    margin-bottom: 1rem;
}

.label {
    display: block;
    font-size: 1rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.input, .textarea, .select {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid #e5e7eb;
    border-radius: 0.375rem;
    font-size: 1rem;
    background-color: #fff;
    transition: border-color 0.3s ease, box-shadow 0.3s ease;
}

.input:focus, .textarea:focus, .select:focus {
    border-color: #2563eb;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.2);
    outline: none;
}

.textarea {
    resize: vertical;
    min-height: 120px;
}

.select {
    appearance: none;
    background-image: url('data:image/svg+xml,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"%3E%3Cpath fill="none" d="M5.293 7.293a1 1 0 0 1 1.414 0L10 10.586l3.293-3.293a1 1 0 1 1 1.414 1.414l-4 4a1 1 0 0 1-1.414 0l-4-4a1 1 0 0 1 0-1.414z" /%3E%3C/svg%3E');
    background-repeat: no-repeat;
    background-position: right 0.5rem center;
    background-size: 16px;
    padding-right: 2.5rem;
}

/* ============================
   BUTTON STYLES
   ============================ */

/* Base Button */
button {
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 0.375rem;
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    display: inline-block;
    text-align: center;
}

button:focus {
    outline: none;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Primary Button */
.button-primary {
    background-color: #2563eb;
    color: white;
}

.button-primary:hover {
    background-color: #1d4ed8;
}

.button-primary:active {
    background-color: #1e40af;
}

.button-primary:focus {
    background-color: #1d4ed8;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Secondary Button */
.button-secondary {
    background-color: #4b5563;
    color: white;
}

.button-secondary:hover {
    background-color: #374151;
}

.button-secondary:active {
    background-color: #2d3d44;
}

.button-secondary:focus {
    background-color: #374151;
    box-shadow: 0 0 0 2px rgba(75, 85, 99, 0.25);
}

/* Danger Button */
.button-danger {
    background-color: #ef4444;
    color: white;
}

.button-danger:hover {
    background-color: #dc2626;
}

.button-danger:active {
    background-color: #b91c1c;
}

.button-danger:focus {
    background-color: #dc2626;
    box-shadow: 0 0 0 2px rgba(239, 68, 68, 0.25);
}

/* Success Button */
.button-success {
    background-color: #10b981;
    color: white;
}

.button-success:hover {
    background-color: #059669;
}

.button-success:active {
    background-color: #047857;
}

.button-success:focus {
    background-color: #059669;
    box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.25);
}

/* Info Button */
.button-info {
    background-color: #3b82f6;
    color: white;
}

.button-info:hover {
    background-color: #2563eb;
}

.button-info:active {
    background-color: #1d4ed8;
}

.button-info:focus {
    background-color: #2563eb;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.25);
}

/* Warning Button */
.button-warning {
    background-color: #f59e0b;
    color: white;
}

.button-warning:hover {
    background-color: #d97706;
}

.button-warning:active {
    background-color: #b45309;
}

.button-warning:focus {
    background-color: #d97706;
    box-shadow: 0 0 0 2px rgba(245, 158, 11, 0.25);
}

/* Transparent Button */
.button-transparent {
    background-color: transparent;
    color: #2563eb;
    border: 1px solid #2563eb;
}

.button-transparent:hover {
    background-color: #2563eb;
    color: white;
}

.button-transparent:active {
    background-color: #1d4ed8;
    color: white;
}

.button-transparent:focus {
    background-color: #2563eb;
    color: white;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Outline Button */
.button-outline {
    background-color: transparent;
    color: #2563eb;
    border: 2px solid #2563eb;
}

.button-outline:hover {
    background-color: #2563eb;
    color: white;
}

.button-outline:active {
    background-color: #1d4ed8;
    color: white;
}

.button-outline:focus {
    background-color: #2563eb;
    color: white;
    box-shadow: 0 0 0 2px rgba(37, 99, 235, 0.25);
}

/* Button Sizes */

/* Small Button */
.button-small {
    padding: 0.25rem 0.5rem;
    font-size: 0.875rem;
}

/* Medium Button (default size) */
.button-medium {
    padding: 0.5rem 1rem;
    font-size: 1rem;
}

/* Large Button */
.button-large {
    padding: 0.75rem 1.5rem;
    font-size: 1.125rem;
}

/* ============================
   BUTTON STATES
   ============================ */

/* Disabled Button */
.button:disabled,
.button-primary:disabled,
.button-secondary:disabled,
.button-danger:disabled,
.button-success:disabled,
.button-info:disabled,
.button-warning:disabled,
.button-transparent:disabled,
.button-outline:disabled {
    background-color: #e5e7eb;
    color: #9ca3af;
    cursor: not-allowed;
    border: 1px solid #e5e7eb;
}

.button:disabled:hover,
.button-primary:disabled:hover,
.button-secondary:disabled:hover,
.button-danger:disabled:hover,
.button-success:disabled:hover,
.button-info:disabled:hover,
.button-warning:disabled:hover,
.button-transparent:disabled:hover,
.button-outline:disabled:hover {
    background-color: #e5e7eb;
    color: #9ca3af;
}

/* ============================
   ADDITIONAL BUTTONS
   ============================ */

/* Icon Buttons */
.button-icon {
    padding: 0.5rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
}

.button-icon svg {
    margin-right: 0.5rem;
}

/* Loading Button */
.button-loading {
    position: relative;
}

.button-loading .spinner {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 1rem;
    height: 1rem;
    border: 2px solid transparent;
    border-top-color: white;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

/* ============================
   BUTTON GROUPS
   ============================ */
.button-group {
    display: inline-flex;
    gap: 0.5rem;
}

.button-group .button {
    border-radius: 0.375rem;
}

.button-group .button:first-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
}

.button-group .button:last-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
}

/* ============================
   TOOLTIP
   ============================ */

.tooltip {
    position: relative;
    display: inline-block;
    cursor: pointer;
}

.tooltip::after {
    content: attr(data-tooltip);
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translateX(-50%);
    background-color: #333;
    color: #fff;
    padding: 0.5rem;
    font-size: 0.875rem;
    border-radius: 0.375rem;
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    white-space: nowrap;
}

.tooltip:hover::after {
    visibility: visible;
    opacity: 1;
}
